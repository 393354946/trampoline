/**
 * @file autosar_tp_s3/autosar_tp_s3.oil
 *
 * @section desc File description
 *
 * @section copyright Copyright
 *
 * Trampoline Test Suite
 *
 * Trampoline Test Suite is copyright (c) IRCCyN 2005-2007
 * Trampoline Test Suite is protected by the French intellectual property law.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; version 2
 * of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 * @section infos File informations
 *
 * $Date$
 * $Rev$
 * $Author$
 * $URL$
 */

OIL_VERSION = "3.1" : "autosar_st_s1" ;

IMPLEMENTATION trampoline {

    TASK {
        UINT32 [1..10] PRIORITY = 1 ;
        UINT32 STACKSIZE = 300;
    };

    ISR {
        UINT32 STACKSIZE = 200;
    };

};

CPU test {

    OS config {
        STATUS = EXTENDED;
        SYSTEM_CALL = TRUE;
        BUILD = TRUE {
            APP_SRC = "autosar_tp_s3.c";
            APP_SRC = "tpl_timing_protection.c";
            APP_NAME = "autosar_tp_s1_exe";
            TRAMPOLINE_BASE_PATH = "../../../../../../";
            CFLAGS = "-O1";
            LDFLAGS = "-Map=blink.map";
            COMPILER = "arm-none-eabi-gcc";
            ASSEMBLER = "arm-none-eabi-as";
            LINKER = "arm-none-eabi-ld";
            COPIER = "arm-none-eabi-objcopy";
            SYSTEM = PYTHON;
            LIBRARY = time_enforcement;
            LIBRARY = gpt;
        };
        MEMMAP = TRUE {
            COMPILER = gcc;
            LINKER = gnu_ld { SCRIPT = "script.ld"; };
            ASSEMBLER = gnu_as;
            MEMORY_PROTECTION = FALSE;
        };
        USERSERVICEHOOK = TRUE;
        TIMEENFORCEMENT = TRUE;
        SHUTDOWNHOOK = TRUE;
        PROTECTIONHOOK = TRUE;
    };

    APPMODE std {};

    TASK t1 {
        AUTOSTART = TRUE { 
            APPMODE = std; 
        };
        PRIORITY = 3;
        ACTIVATION = 1;
        SCHEDULE = FULL;
        TIMING_PROTECTION = TRUE {
            EXECUTIONBUDGET = 2500; 
            TIMEFRAME = 1;
        };
        EVENT = t1_event1;
        STATE s1 {
            INITIAL = TRUE;
            T = WaitEvent {
                STATE = s2;
                EFT = 0;
            };
        };
        STATE s2 {
            T = WaitEvent {
                STATE = s3;
                EFT = 0;
            };
        };
        STATE s3 {
            T = WaitEvent {
                STATE = s4;
                EFT = 0;
            };
        };
        STATE s4 {
            T = TerminateTask {
                STATE = s1;
                EFT = 3000;
            };
        };
    };

    TASK t2 {
        AUTOSTART = TRUE { 
            APPMODE = std; 
        };
        PRIORITY = 2;
        ACTIVATION = 1;
        SCHEDULE = FULL;
        STATE s1 {
            INITIAL = TRUE;
            T = TerminateTask {
                STATE = s1;
                EFT = 3000;
            };
        };
    };
    
    TASK t3 {
        AUTOSTART = TRUE { 
            APPMODE = std; 
        };
        PRIORITY = 1;
        ACTIVATION = 1;
        SCHEDULE = FULL;
    };

    EVENT t1_event1 { 
        MASK = AUTO;
    };
};

/* End of file autosar_tp_s3/autosar_tp_s3.oil */
