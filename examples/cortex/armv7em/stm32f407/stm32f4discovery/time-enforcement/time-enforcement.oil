OIL_VERSION = "2.5";

IMPLEMENTATION trampoline {

    /* This fix the default STACKSIZE of tasks */
    TASK {
        UINT32 STACKSIZE = 300 ;
    } ;

    /* This fix the default STACKSIZE of ISRs */
    ISR {
        UINT32 STACKSIZE = 200 ;
    } ;
};

CPU blink {
    OS config {
        STATUS = EXTENDED;
        PRETASKHOOK = TRUE;
        POSTTASKHOOK = TRUE;
        PAINT_STACK = TRUE;
        PAINT_REGISTERS = TRUE;

        BUILD = TRUE {
            TRAMPOLINE_BASE_PATH = "../../../../../..";
            APP_SRC = "time-enforcement.c";
            APP_NAME = "time-enforcement_exe";
            CFLAGS  = "-O0";
            LDFLAGS = "-Map=blink.map";
            COMPILER = "arm-none-eabi-gcc";
            ASSEMBLER = "arm-none-eabi-as";
            LINKER = "arm-none-eabi-ld";
            COPIER = "arm-none-eabi-objcopy";
            SYSTEM = PYTHON;
            LIBRARY = time_enforcement;
        };
        SYSTEM_CALL = TRUE;
        MEMMAP = TRUE {
            COMPILER = gcc;
            LINKER = gnu_ld { SCRIPT = "script.ld"; };
            ASSEMBLER = gnu_as;
            MEMORY_PROTECTION = FALSE;
        };
        USERSERVICEHOOK = TRUE;
        TIMEENFORCEMENT = TRUE;
    };

    APPMODE std {};

    TASK t_delay {
        PRIORITY = 1;
        AUTOSTART = TRUE {
            APPMODE = std;
        };
        ACTIVATION = 2;
        SCHEDULE = FULL;

        STATE s1 {
            INITIAL = TRUE;
            T = TerminateTask {
                STATE = s2;
                EFT   = 100;
            };
        };

        STATE s2 {
            T = TerminateTask {
                STATE = s1;
                EFT   = 0;
            };
        };
    };

    TASK t_nodelay {
        PRIORITY = 2;
        AUTOSTART = TRUE {
            APPMODE = std;
        };
        ACTIVATION = 1;
        SCHEDULE = FULL;

    };

    ALARM alarm_t_delay_100ms {
        COUNTER = SystemCounter;
        ACTION = ACTIVATETASK {
            TASK = t_delay;
        };
        AUTOSTART = TRUE {
            APPMODE = std;
            ALARMTIME = 100;
            CYCLETIME = 100;
        };
    };

    ALARM alarm_t_nodelay_100ms {
        COUNTER = SystemCounter;
        ACTION = ACTIVATETASK {
            TASK = t_nodelay;
        };
        AUTOSTART = TRUE {
            APPMODE = std;
            ALARMTIME = 100;
            CYCLETIME = 100;
        };
    };
};

