/* Running the following example:
 * just call goil a first time using the command line:
 * goil --target=avr/arduino --templates=../../../../goil/templates/ blink.oil
 * you may have to update ARDUINO section (l.20) for your configuration.
 *
 * Then a Makefile is generated. Just type:
 * make -s
 * To clean the project, call:
 * make clean
 * It will remove all generated files, except the Makefile.
 * to flash to the Arduino:
 * make -s flash
 * It will use the PORT defined in the ARDUINO part.
 */
OIL_VERSION = "2.5" : "test" ;

CPU test {    
  OS config {
    STATUS = STANDARD;
    ARDUINO = TRUE {
      BOARD = UNO;   //either UNO or MEGA
      SERIAL = TRUE; //use the serial interface 
      PORT = "/dev/tty.usbmodem1411"; //serial port (flash)
      AVR_LIBC = "/usr/local/CrossPack-AVR/avr/include/";
    };
    BUILD = TRUE {
      TRAMPOLINE_BASE_PATH = "../../../..";
      APP_NAME = "trampuinoBlink";
      APP_SRC = "blink.cpp";
      COMMONFLAGS = "-Os -Wall -DF_CPU=16000000 -mmcu=atmega328p"; //CFLAGS + CPPFLAGS
      ASFLAGS = "-DF_CPU=16000000 -mmcu=atmega328p";
      LDFLAGS = "-DF_CPU=16000000 -mmcu=atmega328p";
      CPPCOMPILER = "avr-g++";
      COMPILER = "avr-gcc";
      LINKER = "avr-gcc";
      ASSEMBLER = "avr-gcc";
      SYSTEM = PYTHON;
    };
    SYSTEM_CALL = TRUE;
  };

  APPMODE std {};
  
  ALARM periodicAl {
    COUNTER= SystemCounter;
    ACTION = ACTIVATETASK {
      TASK = periodicTask;
    };
    AUTOSTART = TRUE {
      ALARMTIME = 1000; //activated each 1024 ms
      CYCLETIME = 1000; //activated each 1024 ms
      APPMODE = std;
    };
  };

  TASK periodicTask {
    PRIORITY = 20;
    AUTOSTART = FALSE;
    //AUTOSTART = TRUE {APPMODE=std;};
    ACTIVATION = 1;
    SCHEDULE = FULL;
    STACKSIZE = 256;
  };

};
