/*=============================================================================
 * Target dependant configuration structs
 */

#define OS_START_SEC_VAR_UNSPECIFIED
#include "tpl_memmap.h"

%
let used_counters := emptymap
foreach counter in HARDWARECOUNTERS do
  let used_counters[counter::SOURCE] := counter
end foreach

if exists used_counters["decrementer"] then
%VAR(uint32, OS_VAR) tpl_dec_init_value = % !used_counters["decrementer"]::FREQUENCY %;%
end if
%

#define OS_STOP_SEC_VAR_UNSPECIFIED
#include "tpl_memmap.h"


/***** Interrupt Controller base address table *****/
%
loop core from 0 to OS::NUMBER_OF_CORES - 1
before
%
#define OS_START_SEC_CONST_UNSPECIFIED
#include "tpl_memmap.h"
CONSTP2CONST(struct _tpl_intc, OS_CONST, OS_CONST) tpl_intc[% !OS::NUMBER_OF_CORES %] =
{
%
    do      %   (struct _tpl_intc*)TPL_INTC% !core %_Base%
    between %,
%
    after   %
};
#define OS_STOP_SEC_CONST_UNSPECIFIED
#include "tpl_memmap.h"

%
end loop
%

/***** Semaphore base address table *****/
%
if OS::NUMBER_OF_CORES > 1 then
  loop core from 0 to OS::NUMBER_OF_CORES - 1
  before
%
#define OS_START_SEC_CONST_UNSPECIFIED
#include "tpl_memmap.h"
CONSTP2CONST(struct _tpl_sema4, OS_CONST, OS_CONST) tpl_sem[% !OS::NUMBER_OF_CORES %] =
{
%
    do      %   (struct _tpl_sema4*)TPL_SEMA4% !core %_Base%
    between %,
%
    after   %
};
#define OS_STOP_SEC_CONST_UNSPECIFIED
#include "tpl_memmap.h"

%
  end loop
end if
%

