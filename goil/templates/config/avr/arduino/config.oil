CPU avrArduino {

  PLATFORM_FILES arduinoBase {
    PATH = "avr/arduino";
    CPPFILE = "main.cpp";
  };

  PLATFORM_FILES arduinoUno {
    PATH = "avr/arduino/hardware/variants/standard";
  };

  BUILDOPTIONS buildOptionsForArduino {
    PRELDFLAGS = "-lm"; //math lib requied
    PREASFLAGS = "-x assembler-with-cpp";
  };
  
  PLATFORM_FILES arduinoBaseSerial {
    PATH = "avr/arduino/hardware/cores/arduino";
    CPPFILE = "HardwareSerial0.cpp";
    CPPFILE = "HardwareSerial.cpp";
    CPPFILE = "HID.cpp";
    CPPFILE = "IPAddress.cpp";
    CPPFILE = "new.cpp";
    CPPFILE = "Print.cpp";
    CPPFILE = "Stream.cpp";
    CPPFILE = "Tone.cpp";
    CPPFILE = "USBCore.cpp";
    CPPFILE = "WMath.cpp";
    CPPFILE = "WString.cpp";
    CFILE = "wiring_digital.c";
    CFILE = "wiring.c";
    CPPFILE = "abi.cpp";
    CFILE = "hooks.c";
  };
  
  STDLIBVARIANT gccAvrKind {
    KIND = "avr5";
  };

};

/*
 * This configuration file adds a SOURCE attribute to ISR and COUNTER
 * It also define a new object type: INTERRUPT
 */
IMPLEMENTATION avr_interrupt {
  TASK [] {
    UINT32 STACKSIZE = 128;
  };
  ISR [] {
    UINT32 STACKSIZE = 128;
    STRING SOURCE;
  };
  COUNTER [] {
    STRING SOURCE;
  };
};

//specific to arduino.
IMPLEMENTATION Trampoline {
  OS {
        BOOLEAN [
          TRUE {
            ENUM [UNO, MEGA] BOARD; //card variant.
            //path to libc (required for <avr/io.h>)
            STRING AVR_LIBC = "/usr/lib/avr/include";
            //port to flash Arduino
            STRING PORT = "/dev/ttyUSB0";
            
            //BOOLEAN SPI = FALSE;
            //BOOLEAN I2C = FALSE;
            //BOOLEAN SERVO = FALSE;
            BOOLEAN SERIAL = FALSE;
            //BOOLEAN NRF24 = FALSE;
            //BOOLEAN TINYRTC = FALSE;
            //BOOLEAN TIME = FALSE;
            //BOOLEAN STANDARDWIRING = FALSE;
            //BOOLEAN EVOLVEARDUINO = FALSE;
            //BOOLEAN LCDCRYSTAL = FALSE;
            //BOOLEAN STEPPER = FALSE;
          },
          FALSE
        ] ARDUINO = TRUE;
      BOOLEAN SYSTEM_CALL = TRUE;
  };
};

CPU arduino {
  COUNTER SystemCounter {
    TICKSPERBASE = 1;
    MAXALLOWEDVALUE = 65535;
    MINCYCLE = 1;
    SOURCE = "TIMER0_OVF_vect";
  };

  POSTCOMMAND flash {
    COMMAND flash {
      MESSAGE = "Flashing";
      COMMAND = "avrdude";
      INPUT = TARGET { EXT = ""; };
      PREOPTION = "-c arduino -p m328p -P/dev/ttyUSB0 -U flash:w:";
    };
  };
}; 
