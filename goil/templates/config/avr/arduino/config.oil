CPU avrArduino {

  BUILDOPTIONS buildOptionsForArduino {
    PRELDFLAGS  = "-lm"; //math lib requied
    PREASFLAGS  = "-x assembler-with-cpp";
    COMMONFLAGS = "-Wno-unused-but-set-variable";
  };

  PLATFORM_FILES arduinoBase {
    PATH    = "avr/arduino/cores/arduino";
    CPPFILE = "main.cpp";        // main
    CFILE   = "wiring_digital.c";  // pinMode, digitalWrite, digitalRead
    CFILE   = "wiring.c";          // millis, micors, delay... and isr for counter.
    CFILE   = "hooks.c";           // yield (not used directly , but included in wiring)
    CFILE   = "wiring_analog.c";   // analogWrite, analogRead, analogReference
    CPPFILE = "WMath.cpp";         // random, randomSeed, map
    CPPFILE = "WString.cpp";       // String type
    CPPFILE = "WInterrupts.c";     // attachInterrupts, detachInterrupts (=> should not be used directly!)
    CPPFILE = "abi.cpp";           // some C++ stuff.
    CPPFILE = "new.cpp";           // some C++ stuff.
  };

  LIBRARY advancedIO {
    PATH    = "avr/arduino/cores/arduino";
    CPPFILE = "Tone.cpp";        // tone, noTone
    ASFILE  = "wiring_pulse.S";
    CPPFILE = "wiring_pulse.c";  // pulseIn, pulseInLong
    CPPFILE = "wiring_shift.c";  // shiftIn, shiftOut
  };
  
  LIBRARY serial {
    PATH = "avr/arduino/cores/arduino";
    CPPFILE = "Print.cpp";            //Stream inherits from Print
    CPPFILE = "Stream.cpp";           //HardwareSerial inherits from Stream
    CPPFILE = "HardwareSerial0.cpp";
    CPPFILE = "HardwareSerial1.cpp";
    CPPFILE = "HardwareSerial2.cpp";
    CPPFILE = "HardwareSerial3.cpp";
    CPPFILE = "HardwareSerial.cpp";
  };
  
  // not used (at this date):
  // IPAddress.cpp
  // PluggableUSB.cpp
  // USBCore.cpp
};

/*
 * This configuration file adds a SOURCE attribute to ISR and COUNTER
 * It also define a new object type: INTERRUPT
 */
IMPLEMENTATION avr_interrupt {
  TASK [] {
    UINT32 STACKSIZE = 128;
  };
  ISR [] {
    UINT32 STACKSIZE = 128;
    STRING SOURCE;
  };
  COUNTER [] {
    STRING SOURCE;
  };
};

CPU arduino {
  COUNTER SystemCounter {
    TICKSPERBASE = 1;
    MAXALLOWEDVALUE = 65535;
    MINCYCLE = 1;
    SOURCE = "TIMER0_OVF_vect";
  };
}; 
