%
# @file custom_counter_check.goilTemplate
#
# @section desc File description
#
# Custom checking for MPC5643L - Counters
#
# @section copyright Copyright
#
# Trampoline OS
#
# Trampoline is copyright (c) IRCCyN
# Trampoline is protected by the French intellectual property law.
#
# This software is distributed under the Lesser GNU Public Licence
#
# @section infos File informations
#
# $Date$
# $Rev$
# $Author$
# $URL$
#

# -----------------------------------------------------------------------------
# ERROR
# All hardware counters must have a source
#
foreach counter in HARDWARECOUNTERS do
  if not exists counter::SOURCE then
    error counter::NAME : "All hardware counters must have a source."
  end if
end foreach

# -----------------------------------------------------------------------------
# ERROR
# Check the counter's source does exist
#
let interrupt_map := mapof INTERRUPT by NAME
foreach counter in HARDWARECOUNTERS do
  if not exists interrupt_map[counter::SOURCE] then
    error counter::NAME : "interrupt source " + counter::SOURCE + " does not "
                        + "exists."
  end if
end foreach

# -----------------------------------------------------------------------------
# ERROR
# Two hardware counters that uses the same channel must have the same frequency
#

let pit_channel_list := @[ ]
foreach counter in HARDWARECOUNTERS do
  if exists pit_channel_list[counter::SOURCE] then
    if pit_channel_list[counter::SOURCE]::FREQUENCY != counter::FREQUENCY then
      error counter::FREQUENCY : "Counters " + counter::NAME + " and "
                               + pit_channel_list[counter::SOURCE]::NAME
                               + " have different frequencies and the same "
                               + "interrupt source " + counter::SOURCE
    end if
  else
    let pit_channel_list[counter::SOURCE] := counter
  end if
end foreach

